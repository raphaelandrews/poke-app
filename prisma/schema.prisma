// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  pokemons Pokemon[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Pokemon {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String

  base      PokemonBaseStats?
  evolution PokemonEvolution?
  profile   PokemonProfile?
  image     PokemonImage?

  typeId String[]      @db.ObjectId
  type   PokemonType[] @relation(fields: [typeId], references: [id])

  pokemonSpecieId String?        @db.ObjectId
  PokemonSpecie   PokemonSpecie? @relation(fields: [pokemonSpecieId], references: [id])
  userId          String         @db.ObjectId
  user            User           @relation(fields: [userId], references: [id])
}

model PokemonBaseStats {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  Level         Int    @default(1)
  XP            Int    @default(1)
  HP            Int
  MaximumAttack Int
  MinimumAttack Int
  Defense       Int
  SpeedAttack   Int
  SpeedDefense  Int
  Speed         Int

  pokemonId String  @unique @db.ObjectId
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonProfile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  height Int
  weight Int
  gender String

  eggId     String[]         @db.ObjectId
  egg       PokemonEgg[]     @relation(fields: [eggId], references: [id])
  abilityId String[]         @db.ObjectId
  ability   PokemonAbility[] @relation(fields: [abilityId], references: [id])

  pokemonId String  @unique @db.ObjectId
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonEgg {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  active Boolean @default(false)

  pokemonProfileId String[]         @db.ObjectId
  pokemonProfile   PokemonProfile[] @relation(fields: [pokemonProfileId], references: [id])
}

model PokemonAbility {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  active Boolean @default(false)

  pokemonProfileId String[]         @db.ObjectId
  pokemonProfile   PokemonProfile[] @relation(fields: [pokemonProfileId], references: [id])
}

model PokemonSpecie {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  pokemons Pokemon[]
}

model PokemonType {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  pokemonId String[]  @db.ObjectId
  pokemon   Pokemon[] @relation(fields: [pokemonId], references: [id])
}

model PokemonEvolution {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  prev String[] @default([])
  next String[] @default([])

  pokemonId String  @unique @db.ObjectId
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonImage {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  sprite    String
  thumbnail String

  pokemonId String  @unique @db.ObjectId
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
}
